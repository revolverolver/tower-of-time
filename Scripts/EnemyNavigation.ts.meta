fileFormatVersion: 2
guid: 725bb7be805811642acfbcb3d4032de0
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"IsCompiled":true,"CompilerVersion":"2.0.63","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/PlayerController","@assets/Experience/tower-of-time/Scripts/CameraMovement"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nclass EnemyNavigation extends UnityEngine_1.MonoBehaviour
    {\n    constructor() {\n        super(...arguments);\n        this.speed = 1.8;\n       
    this.turnSpeed = 3.0;\n        this.layerMask = 1 << UnityEngine_1.LayerMask.NameToLayer(\"CustomLayer6\");\n       
    this.wallDirection = UnityEngine_1.Vector3.zero;\n    }\n    //Called when script
    instance is loaded\n    Awake() { }\n    //Start is called on the frame when
    a script is enabled just \n    //before any of the Update methods are called
    the first time.\n    Start() {\n        this.target = UnityEngine_1.GameObject.FindGameObjectWithTag(\"Player\").transform;\n   
    }\n    //Update is called every frame, if the MonoBehaviour is enabled.\n   
    FixedUpdate() {\n        if (this.target != null) {\n            this.WalkTowardsPlayer();\n       
    }\n    }\n    WalkTowardsPlayer() {\n        // The direction to walk in\n       
    let walkDirection = new UnityEngine_1.Vector3(0, 0, 0);\n        // Shoot ray
    towards player\n        let playerDirection = UnityEngine_1.Vector3.op_Subtraction(this.target.position,
    this.transform.position);\n        let ray = new UnityEngine_1.Ray(this.transform.position,
    playerDirection.normalized);\n        let hit = $ref();\n        // Is the ray
    hitting a nearby wall?\n        if ( // @ts-ignore\n        UnityEngine_1.Physics.Raycast_EBB7509C_C446A765(ray,
    hit, 1.0, this.layerMask)) {\n            if (!this.onWall) {\n               
    // If so, change direction based on hit normal\n                // I''m not sure
    what Cross does but it works \n                let cross = UnityEngine_1.Vector3.Cross(playerDirection.normalized,
    $unref(hit).normal);\n                // if cross.y > 0, player is on the enemies
    right, if cross.y < 0, he is on the left\n                // Take the normal
    and rotate it 90 degrees to the left or right depending on where the player is\n               
    let deg = (cross.y > 0) ? -90.0 : 90.0;\n                let rot = // @ts-ignore\n                
    UnityEngine_1.Quaternion.Euler_EBB7509C_E4172388((0), deg, (0));\n               
    // Set direction\n                walkDirection = UnityEngine_1.Quaternion.op_Multiply(rot,
    $unref(hit).normal);\n                // Remember wall\n                this.wallNormal
    = $unref(hit).normal;\n                this.wallDirection = walkDirection;\n               
    this.onWall = true;\n            }\n            else if (this.onWall && UnityEngine_1.Vector3.op_Equality($unref(hit).normal,
    this.wallNormal)) {\n                // Follow up the same wall\n               
    walkDirection = new UnityEngine_1.Vector3(this.wallDirection.x, this.wallDirection.y,
    this.wallDirection.z);\n            }\n            else if (this.onWall && UnityEngine_1.Vector3.op_Inequality($unref(hit).normal,
    this.wallNormal)) {\n                // Reset if you hit a new wall\n               
    this.onWall = false;\n            }\n        }\n        else {\n            //
    Otherwise walk in player direction\n            walkDirection = playerDirection.normalized;\n           
    this.onWall = false;\n        }\n        // Turn to walk direction\n        let
    look = UnityEngine_1.Quaternion.LookRotation(walkDirection, UnityEngine_1.Vector3.up);\n       
    this.rb.MoveRotation(UnityEngine_1.Quaternion.Lerp(this.transform.rotation, look,
    UnityEngine_1.Time.deltaTime * 5));\n        // Walk forward\n        //this.rb.MovePosition(this.transform.forward
    * Time.fixedDeltaTime * this.speed);\n        walkDirection = // @ts-ignore\n           
    UnityEngine_1.Vector3.op_Multiply_EBB7509C_H75CC56AF(walkDirection, UnityEngine_1.Time.fixedDeltaTime
    * this.speed);\n        let finalPosition = UnityEngine_1.Vector3.op_Addition(this.transform.position,
    walkDirection);\n        this.rb.MovePosition(finalPosition);\n    }\n}\nexports.default
    = EnemyNavigation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxDQUFDLFVBQVMsQ0FBQyxFQUMzRDtnQkFDSSw4QkFBNkI7Z0JBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSztZQUN2QjtRQUNKO2FBRUE7WUFDSSxxQ0FBb0M7WUFDcEMsYUFBYSxHQUFHLGVBQWUsQ0FBQyxVQUFVO1lBQzFDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSztRQUN2QjtRQUVBLHlCQUF3QjtRQUN4QixJQUFJLElBQUksR0FBRyx3QkFBVSxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUUscUJBQU8sQ0FBQyxFQUFFLENBQUM7UUFDN0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsd0JBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLGtCQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBRXhGLGVBQWM7UUFDZCxrRkFBaUY7UUFDakYsYUFBYSxHQUFFO1lBQUMscUJBQU8sQ0FBQyw4QkFBVyxDQUFDLGFBQWEsRUFBRSxrQkFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3BGLElBQUksYUFBYSxHQUFHLHFCQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLGFBQWEsQ0FBQztRQUUvRSxJQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUM7SUFDdkM7Q0FDSjtBQS9GQSxrQ0ErRkEiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkVuZW15TmF2aWdhdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==","ScriptHash":"9d82f7ad8c74cce42bba895159755553","Specifier":"@assets/Experience/tower-of-time/Scripts/EnemyNavigation","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/EnemyNavigation.EnemyNavigation","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/EnemyNavigation.EnemyNavigation","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.11.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"rb","Name":"rb","TypeName":"UnityEngine.Rigidbody","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Rb","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None","DisplayName":"EnemyNavigation","name":"EnemyNavigation","hideFlags":"NotEditable"}'
