fileFormatVersion: 2
guid: 725bb7be805811642acfbcb3d4032de0
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"__scriptableObject__name":"EnemyNavigation","__scriptableObject__type":"Genies.Scripting.AssetTypes.TsAsset,
    Genies.Scripting, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null","IsCompiled":true,"CompilerVersion":"2.0.66","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/RoundManager","@assets/Experience/tower-of-time/Scripts/Turret","@assets/Experience/tower-of-time/Scripts/EnemySpawner"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nconst RoundManager_1 = require(\"@assets/Experience/tower-of-time/Scripts/RoundManager\");\nclass
    EnemyNavigation extends UnityEngine_1.MonoBehaviour {\n    constructor() {\n       
    super(...arguments);\n        this.speed = 1.5;\n        this.fastEnemy = false;\n       
    this.rayTime = 0.0;\n        this.layerMask = 1 << UnityEngine_1.LayerMask.NameToLayer(\"CustomLayer6\");\n       
    this.wallDirection = UnityEngine_1.Vector3.zero;\n        this.direction = UnityEngine_1.Vector3.zero;\n   
    }\n    //Debug.DrawRay(this.transform.position, playerDirection.normalized, Color.white);\n   
    //Start is called on the frame when a script is enabled just \n    //before any
    of the Update methods are called the first time.\n    Start() {\n        this.target
    = UnityEngine_1.GameObject.FindGameObjectWithTag(\"Player\").transform;\n       
    this.turrets = // @ts-ignore\n            UnityEngine_1.GameObject.FindGameObjectWithTag(\"Spawner\").GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemySpawner.EnemySpawner\").turrets;\n       
    //console.log(this.turrets.length);\n    }\n    //Update is called every frame,
    if the MonoBehaviour is enabled.\n    FixedUpdate() {\n        if (this.target
    != null && EnemyNavigation.isWalking) {\n            this.WalkTowardsPlayer();\n       
    }\n        this.CheckTurretRanges();\n    }\n    WalkTowardsPlayer() {\n       
    // Shoot ray towards player\n        let playerDirection = UnityEngine_1.Vector3.op_Subtraction(this.target.position,
    this.transform.position);\n        // The direction to walk in\n        let walkDirection
    = playerDirection.normalized;\n        //let playerDirection = this.target.position
    - this.transform.position;\n        let ray = new UnityEngine_1.Ray(this.transform.position,
    playerDirection.normalized);\n        let hit = $ref();\n        let rayDistance
    = (this.onWall) ? 2.0 : 1.0;\n        //Debug.DrawRay(this.transform.position,
    Vector3.op_Multiply(playerDirection.normalized, rayDistance), Color.white);\n       
    this.rayTime -= UnityEngine_1.Time.fixedDeltaTime;\n        // Raycast only if
    time has passed\n        if (this.rayTime < 0) {\n            if (playerDirection.magnitude
    > 5)\n                this.rayTime = 0.7;\n            else\n               
    this.rayTime = 0.3;\n            // Is the ray hitting a nearby wall?\n           
    if ( // @ts-ignore\n            UnityEngine_1.Physics.Raycast_EBB7509C_C446A765(ray,
    hit, rayDistance, this.layerMask)) {\n                if (!this.onWall) {\n                   
    // If so, change direction based on hit normal\n                    // I''m not
    sure what Cross does but it works \n                    let cross = UnityEngine_1.Vector3.Cross(playerDirection.normalized,
    $unref(hit).normal);\n                    // if cross.y > 0, player is on the
    enemies right, if cross.y < 0, he is on the left\n                    // Take
    the normal and rotate it 90 degrees to the left or right depending on where the
    player is\n                    let deg = (cross.y > 0) ? -90.0 : 90.0;\n                   
    let rot = // @ts-ignore\n                     UnityEngine_1.Quaternion.Euler_EBB7509C_E4172388((0),
    deg, (0));\n                    // Set direction\n                    walkDirection
    = UnityEngine_1.Quaternion.op_Multiply(rot, $unref(hit).normal);\n                   
    // Remember wall\n                    this.wallNormal = $unref(hit).normal;\n                   
    this.wallDirection = walkDirection;\n                    this.onWall = true;\n               
    }\n                else if (this.onWall && UnityEngine_1.Vector3.op_Equality($unref(hit).normal,
    this.wallNormal)) {\n                    // Follow up the same wall\n                   
    walkDirection = new UnityEngine_1.Vector3(this.wallDirection.x, this.wallDirection.y,
    this.wallDirection.z);\n                }\n                else if (this.onWall
    && UnityEngine_1.Vector3.op_Inequality($unref(hit).normal, this.wallNormal))
    {\n                    // Reset if you hit a new wall\n                    this.onWall
    = false;\n                }\n            }\n            else {\n               
    // Otherwise walk in player direction\n                walkDirection = playerDirection.normalized;\n               
    this.onWall = false;\n            }\n        }\n        else {\n            //
    Otherwise walk in player direction\n            walkDirection = this.direction;\n       
    }\n        // Save walkDirection for next frame\n        this.direction = walkDirection;\n       
    // Turn to walk direction\n        let look = UnityEngine_1.Quaternion.LookRotation(walkDirection,
    UnityEngine_1.Vector3.up);\n        this.rb.MoveRotation(UnityEngine_1.Quaternion.Lerp(this.transform.rotation,
    look, UnityEngine_1.Time.deltaTime * 5));\n        // Walk forward\n        this.speed
    = (RoundManager_1.default.swarmRound) ? 1.5 : 1.0;\n        this.speed = (this.fastEnemy)
    ? 1.25 : 1.0;\n        // Move faster every round\n        this.speed *= (0.05
    * RoundManager_1.default.round) + 0.90;\n        walkDirection = // @ts-ignore\n           
    UnityEngine_1.Vector3.op_Multiply_EBB7509C_H75CC56AF(walkDirection, UnityEngine_1.Time.fixedDeltaTime
    * this.speed * this.walkSpeed);\n        let finalPosition = UnityEngine_1.Vector3.op_Addition(this.transform.position,
    walkDirection);\n        this.rb.MovePosition(finalPosition);\n    }\n    //
    See if in range of any turret, then tell the turret if in range\n    CheckTurretRanges()
    {\n        for (let i = 0; i < this.turrets.length; i++) {\n            //console.log(this.turrets[5].isActive);\n           
    // Check if turret has been built\n            if (!this.turrets[i].isActive)\n               
    continue;\n            //console.log(\"TURRET ACTIVE\");\n            if (UnityEngine_1.Vector3.Distance(this.transform.position,
    this.turrets[i].transform.position) < 4) {\n                // Enemy is within
    shooting range of turret\n                this.turrets[i].RequestPotentialTarget(this.transform);\n           
    }\n        }\n    }\n}\nexports.default = EnemyNavigation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5lbXlOYXZpZ2F0aW9uLmpzIiwibWFwcGluZ3MiOiI7O0FBQ0EsNkNBQTJKO0FBQzNKLHdGQUF5QztBQUl6QyxNQUFxQixlQUFnQixTQUFRLDJCQUFhO0lBQTFEOztRQVVZLFVBQUssR0FBVSxHQUFHO1FBRUYsY0FBUyxHQUFTLEtBQUs7UUFDdkMsWUFBTyxHQUFVLEdBQUc7UUFFcEIsY0FBUyxHQUFRLENBQUMsSUFBSSx1QkFBUyxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUM7UUFJM0Qsa0JBQWEsR0FBWSxxQkFBTyxDQUFDLElBQUk7UUFDckMsY0FBUyxHQUFZLHFCQUFPLENBQUMsSUFBSTtJQXVJN0M7SUFwSUksa0ZBQWlGO0lBRWpGLDZEQUE0RDtJQUM1RCw2REFBNEQ7SUFDcEQsS0FBSztRQUVULElBQUksQ0FBQyxNQUFNLEdBQUcsd0JBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsQ0FBQyxTQUFTO1FBQ2xFLElBQUksQ0FBQyxPQUFPLEdBQUU7WUFBQyx3QkFBVSxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVcscUVBQWEsQ0FBSSxDQUFDLE9BQU87UUFFL0YsbUNBQWtDO0lBQ3RDO0lBRUEsZ0VBQStEO0lBQ3ZELFdBQVc7UUFFZixJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxJQUFJLGVBQWUsQ0FBQyxTQUFTLEVBQ3BEO1lBQ0ksSUFBSSxDQUFDLGlCQUFpQixFQUFFO1FBQzVCO1FBRUEsSUFBSSxDQUFDLGlCQUFpQixFQUFFO0lBQzVCO0lBRVEsaUJBQWlCO1FBRXJCLDJCQUEwQjtRQUMxQixJQUFJLGVBQWUsR0FBRyxxQkFBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztRQUUzRiwyQkFBMEI7UUFDMUIsSUFBSSxhQUFhLEdBQUcsZUFBZSxDQUFDLFVBQVU7UUFFOUMsdUVBQXNFO1FBQ3RFLElBQUksR0FBRyxHQUFHLElBQUksaUJBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxlQUFlLENBQUMsVUFBVSxDQUFDO1FBQ3RFLElBQUksR0FBRyxHQUFHLElBQUksRUFBYztRQUU1QixJQUFJLFdBQVcsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHO1FBQzNDLG9IQUFtSDtRQUVuSCxJQUFJLENBQUMsT0FBTyxJQUFJLGtCQUFJLENBQUMsY0FBYztRQUVuQyxrQ0FBaUM7UUFDakMsSUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsRUFDcEI7WUFDSSxJQUFJLGVBQWUsQ0FBQyxTQUFTLEdBQUcsQ0FBQztnQkFDN0IsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHOztnQkFFbEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHO1lBRXRCLG9DQUFtQztZQUNuQyxLQUFHO1lBQUMscUJBQU8sQ0FBQyx5QkFBTyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsRUFDMUQ7Z0JBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQ2hCO29CQUNJLDhDQUE2QztvQkFDN0MsNkNBQTRDO29CQUM1QyxJQUFJLEtBQUssR0FBRyxxQkFBTyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsVUFBVSxFQUFDLE9BQUMsR0FBRSxDQUFPLENBQUMsTUFBTSxDQUFDO29CQUV2RSxvRkFBbUY7b0JBQ25GLGlHQUFnRztvQkFDaEcsSUFBSSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSTtvQkFDdEMsSUFBSSxHQUFHLEdBQUU7cUJBQUMsd0JBQVUsQ0FBQyx1QkFBSSxDQUFDLENBQUMsRUFBQyxFQUFFLEdBQUcsR0FBRSxFQUFDLENBQUM7b0JBRXJDLGdCQUFlO29CQUNmLGFBQWEsR0FBRSx3QkFBRSxZQUFDLE1BQUcsT0FBQyxHQUFFLENBQU8sQ0FBQyxNQUFLLENBQUM7b0JBRXRDLGdCQUFlO29CQUNmLElBQUksQ0FBQyxVQUFVLEdBQUUsT0FBQyxHQUFFLENBQU8sQ0FBQyxNQUFNO29CQUNsQyxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWE7b0JBQ2xDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSTtnQkFDdEI7cUJBQ0ssSUFBSSxJQUFJLENBQUMsTUFBTSxJQUFHLHFCQUFJLFlBQUcsT0FBRSxLQUFDLENBQUMsTUFBSyxFQUFLLElBQUksQ0FBQyxVQUFTLENBQUMsRUFDM0Q7b0JBQ0ksMEJBQXlCO29CQUN6QixhQUFhLEdBQUcsSUFBSSxxQkFBTyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO2dCQUNqRztxQkFDSyxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUcscUJBQUksY0FBRyxPQUFFLEtBQUMsQ0FBQyxNQUFLLEVBQUssSUFBSSxDQUFDLFVBQVMsQ0FBQyxFQUMzRDtvQkFDSSw4QkFBNkI7b0JBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSztnQkFDdkI7WUFDSjtpQkFFQTtnQkFDSSxxQ0FBb0M7Z0JBQ3BDLGFBQWEsR0FBRyxlQUFlLENBQUMsVUFBVTtnQkFDMUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLO1lBQ3ZCO1FBQ0o7YUFFQTtZQUNJLHFDQUFvQztZQUNwQyxhQUFhLEdBQUcsSUFBSSxDQUFDLFNBQVM7UUFDbEM7UUFFQSxvQ0FBbUM7UUFDbkMsSUFBSSxDQUFDLFNBQVMsR0FBRyxhQUFhO1FBRTlCLHlCQUF3QjtRQUN4QixJQUFJLElBQUksR0FBRyx3QkFBVSxDQUFDLFlBQVksQ0FBQyxhQUFhLEVBQUUscUJBQU8sQ0FBQyxFQUFFLENBQUM7UUFDN0QsSUFBSSxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUMsd0JBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsSUFBSSxFQUFFLGtCQUFJLENBQUMsU0FBUyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBRXhGLGVBQWM7UUFDZCxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsc0JBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHO1FBQ2xELElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRztRQUUxQywwQkFBeUI7UUFDekIsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLElBQUksR0FBRyxzQkFBWSxDQUFDLEtBQUssQ0FBQyxHQUFHLElBQUk7UUFFaEQsYUFBYSxHQUFFO1lBQUMscUJBQU8sQ0FBQyw4QkFBVyxDQUFDLGFBQWEsRUFBRSxrQkFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDckcsSUFBSSxhQUFhLEdBQUcscUJBQU8sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUsYUFBYSxDQUFDO1FBRS9FLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQztJQUN2QztJQUVBLGtFQUFpRTtJQUN6RCxpQkFBaUI7UUFFckIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUM1QztZQUNJLHdDQUF1QztZQUN2QyxpQ0FBZ0M7WUFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUTtnQkFDekIsU0FBUTtZQUVaLCtCQUE4QjtZQUM5QixJQUFJLHFCQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFDckY7Z0JBQ0ksMkNBQTBDO2dCQUMxQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDMUQ7UUFDSjtJQUNKO0NBQ0o7QUEzSkEsa0NBMkpBIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJFbmVteU5hdmlnYXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","ScriptHash":"26f75bfab6d713d27f4efe6709798b05","Specifier":"@assets/Experience/tower-of-time/Scripts/EnemyNavigation","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/EnemyNavigation.EnemyNavigation","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/EnemyNavigation.EnemyNavigation","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.13.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"rb","Name":"rb","TypeName":"UnityEngine.Rigidbody","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Rb","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"turrets","Name":"turrets","TypeName":"@assets/Experience/tower-of-time/Scripts/Turret.Turret","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":1,"IsArray":true,"IsEnum":false,"ArrayElementInitializer":{"Path":"turrets_D1","Name":"turrets","TypeName":"@assets/Experience/tower-of-time/Scripts/Turret.Turret","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":true,"IsGeniesScriptableObjectRef":false,"Decorators":[],"Initializers":[],"ArrayDimension":1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Turrets","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},"ChildProperties":[],"PrettyName":"Turrets","_arrayElementInitializerJson":"{\"Path\":\"turrets_D1\",\"Name\":\"turrets\",\"TypeName\":\"@assets/Experience/tower-of-time/Scripts/Turret.Turret\",\"AssemblyName\":null,\"EnumKeys\":[],\"EnumValues\":[],\"IsGeniesBehaviourRef\":true,\"IsGeniesScriptableObjectRef\":false,\"Decorators\":[],\"Initializers\":[],\"ArrayDimension\":1,\"IsArray\":false,\"IsEnum\":false,\"ArrayElementInitializer\":null,\"ChildProperties\":[],\"PrettyName\":\"Turrets\",\"_arrayElementInitializerJson\":null,\"_childPropertiesJson\":\"[]\",\"_prettyName\":null}","_childPropertiesJson":"[]","_prettyName":null},{"Path":"walkSpeed","Name":"walkSpeed","TypeName":"System.Single","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Walk
    Speed","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"fastEnemy","Name":"fastEnemy","TypeName":"System.Boolean","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":["false"],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Fast
    Enemy","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None"}'
