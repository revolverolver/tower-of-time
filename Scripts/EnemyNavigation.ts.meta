fileFormatVersion: 2
guid: 725bb7be805811642acfbcb3d4032de0
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"__scriptableObject__name":"EnemyNavigation","__scriptableObject__type":"Genies.Scripting.AssetTypes.TsAsset,
    Genies.Scripting, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null","IsCompiled":true,"CompilerVersion":"2.0.66","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/RoundManager","@assets/Experience/tower-of-time/Scripts/Turret","@assets/Experience/tower-of-time/Scripts/EnemySpawner"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nconst RoundManager_1 = require(\"@assets/Experience/tower-of-time/Scripts/RoundManager\");\nclass
    EnemyNavigation extends UnityEngine_1.MonoBehaviour {\n    constructor() {\n       
    super(...arguments);\n        this.speed = 1.5;\n        this.layerMask = 1 <<
    UnityEngine_1.LayerMask.NameToLayer(\"CustomLayer6\");\n        this.wallDirection
    = UnityEngine_1.Vector3.zero;\n    }\n    //Debug.DrawRay(this.transform.position,
    playerDirection.normalized, Color.white);\n    //Start is called on the frame
    when a script is enabled just \n    //before any of the Update methods are called
    the first time.\n    Start() {\n        this.target = UnityEngine_1.GameObject.FindGameObjectWithTag(\"Player\").transform;\n       
    this.turrets = // @ts-ignore\n            UnityEngine_1.GameObject.FindGameObjectWithTag(\"Spawner\").GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemySpawner.EnemySpawner\").turrets;\n       
    //console.log(this.turrets.length);\n    }\n    //Update is called every frame,
    if the MonoBehaviour is enabled.\n    FixedUpdate() {\n        if (this.target
    != null && EnemyNavigation.isWalking) {\n            this.WalkTowardsPlayer();\n       
    }\n        this.CheckTurretRanges();\n    }\n    WalkTowardsPlayer() {\n       
    // The direction to walk in\n        let walkDirection = new UnityEngine_1.Vector3(0,
    0, 0);\n        // Shoot ray towards player\n        let playerDirection = UnityEngine_1.Vector3.op_Subtraction(this.target.position,
    this.transform.position);\n        //let playerDirection = this.target.position
    - this.transform.position;\n        let ray = new UnityEngine_1.Ray(this.transform.position,
    playerDirection.normalized);\n        let hit = $ref();\n        let rayDistance
    = (this.onWall) ? 2.0 : 1.0;\n        //Debug.DrawRay(this.transform.position,
    Vector3.op_Multiply(playerDirection.normalized, rayDistance), Color.white);\n       
    // Is the ray hitting a nearby wall?\n        if ( // @ts-ignore\n        UnityEngine_1.Physics.Raycast_EBB7509C_C446A765(ray,
    hit, rayDistance, this.layerMask)) {\n            if (!this.onWall) {\n               
    // If so, change direction based on hit normal\n                // I''m not sure
    what Cross does but it works \n                let cross = UnityEngine_1.Vector3.Cross(playerDirection.normalized,
    $unref(hit).normal);\n                // if cross.y > 0, player is on the enemies
    right, if cross.y < 0, he is on the left\n                // Take the normal
    and rotate it 90 degrees to the left or right depending on where the player is\n               
    let deg = (cross.y > 0) ? -90.0 : 90.0;\n                let rot = // @ts-ignore\n                
    UnityEngine_1.Quaternion.Euler_EBB7509C_E4172388((0), deg, (0));\n               
    // Set direction\n                walkDirection = UnityEngine_1.Quaternion.op_Multiply(rot,
    $unref(hit).normal);\n                // Remember wall\n                this.wallNormal
    = $unref(hit).normal;\n                this.wallDirection = walkDirection;\n               
    this.onWall = true;\n            }\n            else if (this.onWall && UnityEngine_1.Vector3.op_Equality($unref(hit).normal,
    this.wallNormal)) {\n                // Follow up the same wall\n               
    walkDirection = new UnityEngine_1.Vector3(this.wallDirection.x, this.wallDirection.y,
    this.wallDirection.z);\n            }\n            else if (this.onWall && UnityEngine_1.Vector3.op_Inequality($unref(hit).normal,
    this.wallNormal)) {\n                // Reset if you hit a new wall\n               
    this.onWall = false;\n            }\n        }\n        else {\n            //
    Otherwise walk in player direction\n            walkDirection = playerDirection.normalized;\n           
    this.onWall = false;\n        }\n        // Turn to walk direction\n        let
    look = UnityEngine_1.Quaternion.LookRotation(walkDirection, UnityEngine_1.Vector3.up);\n       
    this.rb.MoveRotation(UnityEngine_1.Quaternion.Lerp(this.transform.rotation, look,
    UnityEngine_1.Time.deltaTime * 5));\n        // Walk forward\n        this.speed
    = (RoundManager_1.default.swarmRound) ? 1.5 : 1.0;\n        walkDirection = //
    @ts-ignore\n            UnityEngine_1.Vector3.op_Multiply_EBB7509C_H75CC56AF(walkDirection,
    UnityEngine_1.Time.fixedDeltaTime * this.speed);\n        let finalPosition =
    UnityEngine_1.Vector3.op_Addition(this.transform.position, walkDirection);\n       
    this.rb.MovePosition(finalPosition);\n    }\n    // See if in range of any turret,
    then tell the turret if in range\n    CheckTurretRanges() {\n        for (let
    i = 0; i < this.turrets.length; i++) {\n            //console.log(this.turrets[5].isActive);\n           
    // Check if turret has been built\n            if (!this.turrets[i].isActive)\n               
    continue;\n            //console.log(\"TURRET ACTIVE\");\n            if (UnityEngine_1.Vector3.Distance(this.transform.position,
    this.turrets[i].transform.position) < 4) {\n                // Enemy is within
    shooting range of turret\n                this.turrets[i].RequestPotentialTarget(this.transform);\n           
    }\n        }\n    }\n}\nexports.default = EnemyNavigation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDO1FBRS9FLElBQUksQ0FBQyxFQUFFLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQztJQUN2QztJQUVBLGtFQUFpRTtJQUN6RCxpQkFBaUI7UUFFckIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUM1QztZQUNJLHdDQUF1QztZQUN2QyxpQ0FBZ0M7WUFDaEMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUTtnQkFDekIsU0FBUTtZQUVaLCtCQUE4QjtZQUM5QixJQUFJLHFCQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFDckY7Z0JBQ0ksMkNBQTBDO2dCQUMxQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLHNCQUFzQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7WUFDMUQ7UUFDSjtJQUNKO0NBQ0o7QUE5SEEsa0NBOEhBIiwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlcyI6WyJFbmVteU5hdmlnYXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","ScriptHash":"9934d2dd3d0151630a6d4eaf2483fef7","Specifier":"@assets/Experience/tower-of-time/Scripts/EnemyNavigation","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/EnemyNavigation.EnemyNavigation","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/EnemyNavigation.EnemyNavigation","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.13.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"rb","Name":"rb","TypeName":"UnityEngine.Rigidbody","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Rb","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"turrets","Name":"turrets","TypeName":"@assets/Experience/tower-of-time/Scripts/Turret.Turret","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":1,"IsArray":true,"IsEnum":false,"ArrayElementInitializer":{"Path":"turrets_D1","Name":"turrets","TypeName":"@assets/Experience/tower-of-time/Scripts/Turret.Turret","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":true,"IsGeniesScriptableObjectRef":false,"Decorators":[],"Initializers":[],"ArrayDimension":1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Turrets","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},"ChildProperties":[],"PrettyName":"Turrets","_arrayElementInitializerJson":"{\"Path\":\"turrets_D1\",\"Name\":\"turrets\",\"TypeName\":\"@assets/Experience/tower-of-time/Scripts/Turret.Turret\",\"AssemblyName\":null,\"EnumKeys\":[],\"EnumValues\":[],\"IsGeniesBehaviourRef\":true,\"IsGeniesScriptableObjectRef\":false,\"Decorators\":[],\"Initializers\":[],\"ArrayDimension\":1,\"IsArray\":false,\"IsEnum\":false,\"ArrayElementInitializer\":null,\"ChildProperties\":[],\"PrettyName\":\"Turrets\",\"_arrayElementInitializerJson\":null,\"_childPropertiesJson\":\"[]\",\"_prettyName\":null}","_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None"}'
