fileFormatVersion: 2
guid: 41bfc80fcfac38245a75b4311f86c84c
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"IsCompiled":true,"CompilerVersion":"2.0.63","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/PlayerController","@assets/Experience/tower-of-time/Scripts/CameraMovement","@assets/Experience/tower-of-time/Scripts/PlayerHealth"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nconst PlayerController_1 = require(\"@assets/Experience/tower-of-time/Scripts/PlayerController\");\nconst
    CameraMovement_1 = require(\"@assets/Experience/tower-of-time/Scripts/CameraMovement\");\nconst
    PlayerHealth_1 = require(\"@assets/Experience/tower-of-time/Scripts/PlayerHealth\");\nclass
    JoystickControls extends UnityEngine_1.MonoBehaviour {\n    constructor() {\n       
    super(...arguments);\n        this.touching = false;\n    }\n    //Called when
    script instance is loaded\n    Awake() { }\n    //Start is called on the frame
    when a script is enabled just \n    //before any of the Update methods are called
    the first time.\n    Start() {\n        this.gameManager = CameraMovement_1.default.Instance;\n       
    this.baseIdlePosition = this.base.position;\n        this.gameManager.OnCameraStateChange.addListener(this.CheckGameState,
    //@ts-ignore\n        this);\n    }\n    CheckGameState(newState) {\n       
    switch (newState) {\n            case CameraMovement_1.CameraState.PAN_TO_CLOCK_TOWER:\n               
    this.Nullify();\n                break;\n            case CameraMovement_1.CameraState.ROUND_OVER:\n               
    this.Nullify();\n        }\n    }\n    //Update is called every frame, if the
    MonoBehaviour is enabled.\n    Update() {\n        if (!PlayerHealth_1.default.isAlive)\n           
    return;\n        // Start Touch\n        if (UnityEngine_1.Input.GetMouseButtonDown(0))
    {\n            this.touchStartPosition = UnityEngine_1.Input.mousePosition;\n           
    this.base.position = this.touchStartPosition;\n            this.touching = true;\n           
    // Animate Running\n            this.playerController.ChangeAnimatorState(1);\n       
    }\n        // Holding Touch\n        if (UnityEngine_1.Input.GetMouseButton(0))
    {\n            // Position handle based on direction and distance from the base\n           
    let direction = UnityEngine_1.Vector3.op_Subtraction(this.base.position, UnityEngine_1.Input.mousePosition);\n           
    let distance = UnityEngine_1.Vector3.Distance(this.base.position, UnityEngine_1.Input.mousePosition);\n           
    if (distance < 100) {\n                // Handle is within base\n               
    this.handle.position = UnityEngine_1.Input.mousePosition;\n            }\n           
    else {\n                // Handle is at max distance\n                this.handle.position
    = UnityEngine_1.Vector3.op_Subtraction(this.base.position, // @ts-ignore\n               
    UnityEngine_1.Vector3.op_Multiply_EBB7509C_H75CC56AF(direction.normalized, (100)));\n               
    distance = 100;\n            }\n            // Send Input data to player controller\n           
    this.playerController.GetJoystickInput(direction, distance);\n        }\n       
    // Touch Released\n        if (UnityEngine_1.Input.GetMouseButtonUp(0)) {\n           
    this.base.position = this.baseIdlePosition;\n            this.handle.position
    = this.base.position;\n            this.touching = false;\n            // Animate
    Idle\n            this.playerController.ChangeAnimatorState(0);\n        }\n       
    if (this.touching == false) {\n            // No input from the joystick when
    not touching the screen\n            this.playerController.GetJoystickInput(UnityEngine_1.Vector3.zero,
    0);\n        }\n    }\n    Nullify() {\n        this.base.position = this.baseIdlePosition;\n       
    this.handle.position = this.base.position;\n        this.touching = false;\n       
    PlayerController_1.default.movement = 0;\n        // Animate Idle\n        this.playerController.ChangeAnimatorState(0);\n   
    }\n}\nexports.default = JoystickControls;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVEsSUFBSSxLQUFLLEVBQzFCO1lBQ0ksMERBQXlEO1lBQ3pELElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxnQkFBZ0IsQ0FBQyxxQkFBTyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDM0Q7SUFDSjtJQUVRLE9BQU87UUFFWCxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCO1FBQzFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUTtRQUV6QyxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUs7UUFFckIsMEJBQWdCLENBQUMsUUFBUSxHQUFHLENBQUM7UUFFN0IsZUFBYztRQUNkLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUM7SUFDaEQ7Q0FDSjtBQTVHQSxtQ0E0R0EiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkpveXN0aWNrQ29udHJvbHMudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","ScriptHash":"a8f730e267fde092bff48d74d4427660","Specifier":"@assets/Experience/tower-of-time/Scripts/JoystickControls","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/JoystickControls.JoystickControls","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/JoystickControls.JoystickControls","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.11.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"base","Name":"base","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Base","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"handle","Name":"handle","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Handle","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"playerController","Name":"playerController","TypeName":"@assets/Experience/tower-of-time/Scripts/PlayerController.PlayerController","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":true,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Player
    Controller","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"touching","Name":"touching","TypeName":"System.Boolean","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[],"Initializers":["false"],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Touching","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None","DisplayName":"JoystickControls","name":"JoystickControls","hideFlags":"NotEditable"}'
