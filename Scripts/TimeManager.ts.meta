fileFormatVersion: 2
guid: 0358c7948a1cb1344ba4cc87f31fda85
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"IsCompiled":true,"CompilerVersion":"2.0.63","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/Tower","@assets/Experience/tower-of-time/Scripts/RoundManager","@assets/Experience/tower-of-time/Scripts/CameraMovement","@assets/Experience/tower-of-time/Scripts/EnemySpawner","@assets/Experience/tower-of-time/Scripts/EnemyNavigation"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nconst RoundManager_1 = require(\"@assets/Experience/tower-of-time/Scripts/RoundManager\");\nconst
    CameraMovement_1 = require(\"@assets/Experience/tower-of-time/Scripts/CameraMovement\");\nconst
    EnemySpawner_1 = require(\"@assets/Experience/tower-of-time/Scripts/EnemySpawner\");\nconst
    EnemyNavigation_1 = require(\"@assets/Experience/tower-of-time/Scripts/EnemyNavigation\");\nclass
    TimeManager extends UnityEngine_1.MonoBehaviour {\n    //Called when script instance
    is loaded\n    Awake() { }\n    //Start is called on the frame when a script
    is enabled just \n    //before any of the Update methods are called the first
    time.\n    Start() {\n        this.gameManager = CameraMovement_1.default.Instance;\n       
    this.inGameTimeText.text = \"\";\n    }\n    //Update is called every frame,
    if the MonoBehaviour is enabled.\n    Update() {\n        if (this.isCounting)
    {\n            this.CountDownRound();\n        }\n    }\n    CountDownRound()
    {\n        this.roundTimeLeft -= UnityEngine_1.Time.deltaTime;\n        let minutes
    = Math.floor(this.roundTimeLeft / 60.0);\n        let seconds = Math.round(this.roundTimeLeft
    - (minutes * 60.0));\n        let secString = (seconds < 10) ? \"0\" + seconds.toString()
    : seconds.toString();\n        let finalTime = minutes.toString() + \":\" + secString;\n       
    this.inGameTimeText.text = finalTime;\n        // When count is over\n       
    if (this.roundTimeLeft < 0.1) {\n            this.isCounting = false;\n           
    this.inGameTimeText.text = \"\";\n            // Pause spawning enemies\n           
    EnemySpawner_1.default.isSpawning = false;\n            // Stop walking\n           
    EnemyNavigation_1.default.isWalking = false;\n            // Kill all enemies
    if swarm round\n            if (RoundManager_1.default.swarmRound) {\n               
    RoundManager_1.default.swarmRound = false;\n                EnemySpawner_1.default.killAll
    = true;\n            }\n            // Change game state\n            this.gameManager.ChangeCameraState(CameraMovement_1.CameraState.PAN_TO_CLOCK_TOWER);\n       
    }\n    }\n    // --- Public Call stuff ---\n    StartCountdown(degrees) {\n       
    this.roundTimeObject.SetActive(false);\n        this.roundObject.SetActive(false);\n       
    let sec = Math.ceil(degrees / 60);\n        let roundTime = sec * 10;\n       
    this.roundTimeLeft = roundTime;\n        this.isCounting = true;\n    }\n   
    ShowRoundTime(degrees) {\n        // Convert euler angles to time\n        //let
    division = (RoundManager.round == 1) ? 30 : 60;\n        let sec = Math.ceil(degrees
    / 60);\n        let roundTime = sec * 10;\n        // Show text\n        this.roundTimeText.text
    = roundTime.toString() + \" seconds\";\n        this.roundTimeObject.SetActive(true);\n       
    // Play animation\n        //this.animator.Play(\"Round Time Popup\", -1, 0);\n   
    }\n    ShowRound(round) {\n        this.roundText.text = round.toString();\n       
    this.roundObject.SetActive(true);\n        // Play animation\n        //this.animator.Play(\"Round
    Popup\", -1, 0);\n    }\n}\nexports.default = TimeManager;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltZU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7QUFFQSw2Q0FBdUU7QUFFdkUsd0ZBQXlDO0FBQ3pDLDRGQUE0RDtBQUM1RCx3RkFBeUM7QUFDekMsOEZBQStDO0FBQy9DLE1BQXFCLFdBQVksU0FBUSwyQkFBYTtJQWdCbEQsdUNBQXNDO0lBQzlCLEtBQUssS0FBVztJQUV4Qiw2REFBNEQ7SUFDNUQsNkRBQTREO0lBQ3BELEtBQUs7UUFFVCxJQUFJLENBQUMsV0FBVyxHQUFHLHdCQUFjLENBQUMsUUFBUTtRQUMxQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksR0FBRyxFQUFFO0lBQ2pDO0lBRUEsZ0VBQStEO0lBQ3ZELE1BQU07UUFFVixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQ25CO1lBQ0ksSUFBSSxDQUFDLGNBQWMsRUFBRTtRQUN6QjtJQUNKO0lBRVEsY0FBYztRQUVsQixJQUFJLENBQUMsYUFBYSxJQUFJLGtCQUFJLENBQUMsU0FBUztRQUVwQyxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1FBQ25ELElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQztRQUUvRCxJQUFJLFNBQVMsR0FBRyxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRTtRQUU5RSxJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsUUFBUSxFQUFFLEdBQUcsR0FBRyxHQUFHLFNBQVM7UUFDcEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEdBQUcsU0FBUztRQUVwQyxxQkFBb0I7UUFDcEIsSUFBSSxJQUFJLENBQUMsYUFBYSxHQUFHLEdBQUcsRUFDNUI7WUFDSSxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUs7WUFDdkIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEdBQUcsRUFBRTtZQUU3Qix5QkFBd0I7WUFDeEIsc0JBQVksQ0FBQyxVQUFVLEdBQUcsS0FBSztZQUMvQixlQUFjO1lBQ2QseUJBQWUsQ0FBQyxTQUFTLEdBQUcsS0FBSztZQUVqQyxrQ0FBaUM7WUFDakMsSUFBSSxzQkFBWSxDQUFDLFVBQVUsRUFDM0I7Z0JBQ0ksc0JBQVksQ0FBQyxVQUFVLEdBQUcsS0FBSztnQkFDL0Isc0JBQVksQ0FBQyxPQUFPLEdBQUcsSUFBSTtZQUMvQjtZQUVBLG9CQUFtQjtZQUNuQixJQUFJLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLDRCQUFXLENBQUMsa0JBQWtCLENBQUM7UUFDdEU7SUFDSjtJQUVBLDRCQUEyQjtJQUNwQixjQUFjLENBQUMsT0FBYztRQUVoQyxJQUFJLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDckMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO1FBRWpDLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqQyxJQUFJLFNBQVMsR0FBRyxHQUFHLEdBQUcsRUFBRTtRQUV4QixJQUFJLENBQUMsYUFBYSxHQUFHLFNBQVM7UUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJO0lBQzFCO0lBRU8sYUFBYSxDQUFDLE9BQWM7UUFFL0IsK0JBQThCO1FBQzlCLHFEQUFvRDtRQUNwRCxJQUFJLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDakMsSUFBSSxTQUFTLEdBQUcsR0FBRyxHQUFHLEVBQUU7UUFFeEIsWUFBVztRQUNYLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxVQUFVO1FBQzNELElBQUksQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQztRQUVwQyxpQkFBZ0I7UUFDaEIsZ0RBQStDO0lBQ25EO0lBRU8sU0FBUyxDQUFDLEtBQVU7UUFFdkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRTtRQUN0QyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7UUFFaEMsaUJBQWdCO1FBQ2hCLDJDQUEwQztJQUM5QztDQUNKO0FBM0dBLDhCQTJHQSIsIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZXMiOlsiVGltZU1hbmFnZXIudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","ScriptHash":"1ad3ccf460eb46fd9be584377ed445bd","Specifier":"@assets/Experience/tower-of-time/Scripts/TimeManager","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/TimeManager.TimeManager","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/TimeManager.TimeManager","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.11.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"inGameTimeText","Name":"inGameTimeText","TypeName":"TMPro.TextMeshProUGUI","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"In
    Game Time Text","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"roundTimeObject","Name":"roundTimeObject","TypeName":"UnityEngine.GameObject","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Round
    Time Object","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"roundTimeText","Name":"roundTimeText","TypeName":"TMPro.TextMeshProUGUI","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Round
    Time Text","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"roundObject","Name":"roundObject","TypeName":"UnityEngine.GameObject","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Round
    Object","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"roundText","Name":"roundText","TypeName":"TMPro.TextMeshProUGUI","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Round
    Text","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"animator","Name":"animator","TypeName":"UnityEngine.Animator","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Animator","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None","DisplayName":"TimeManager","name":"TimeManager","hideFlags":"NotEditable"}'
