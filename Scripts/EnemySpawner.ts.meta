fileFormatVersion: 2
guid: c53c30fe9917dbe45941d22f3a8cc699
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"__scriptableObject__name":"EnemySpawner","__scriptableObject__type":"Genies.Scripting.AssetTypes.TsAsset,
    Genies.Scripting, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null","IsCompiled":true,"CompilerVersion":"2.0.66","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/RoundManager","@assets/Experience/tower-of-time/Scripts/Turret","@assets/Experience/tower-of-time/Scripts/Building","@assets/Experience/tower-of-time/Scripts/ParticlePool","@assets/Experience/tower-of-time/Scripts/EnemyDamage","@assets/Experience/tower-of-time/Scripts/DamagePool"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nconst RoundManager_1 = require(\"@assets/Experience/tower-of-time/Scripts/RoundManager\");\nclass
    EnemySpawner extends UnityEngine_1.MonoBehaviour {\n    constructor() {\n       
    super(...arguments);\n        this.poolListNormal = [];\n        this.poolListBig
    = [];\n        this.poolListFast = [];\n        this.normalAmount = 45;\n       
    this.bigAmount = 15;\n        this.fastAmount = 15;\n        this.layerMask =
    (1 << UnityEngine_1.LayerMask.NameToLayer(\"CustomLayer2\")) | (1 << UnityEngine_1.LayerMask.NameToLayer(\"CustomLayer6\"));\n       
    this.maxEnemies = 50;\n    }\n    //Called when script instance is loaded\n   
    Awake() { }\n    //Start is called on the frame when a script is enabled just
    \n    //before any of the Update methods are called the first time.\n    Start()
    {\n        RoundManager_1.default.round = 30;\n        EnemySpawner.spawnFrequenzy
    = 5.0;\n        EnemySpawner.killAll = false;\n        EnemySpawner.isSpawning
    = false;\n        EnemySpawner.startSwarming = false;\n        EnemySpawner.wormsAlive
    = 0;\n        // Find turret references\n        //this.turrets = this.turretParent.GetComponentsInChildren<Turret>();\n       
    for (let i = 0; i < this.turrets.length; i++) {\n            this.turrets[i].gameObject.SetActive(false);\n       
    }\n        // Spawn pools\n        this.SpawnPools();\n        // Start the spawner\n       
    this.StartCoroutine(this.Spawner());\n    }\n    //Update is called every frame,
    if the MonoBehaviour is enabled.\n    Update() { }\n    SpawnPools() {\n       
    // Normal\n        for (let i = 0; i < this.normalAmount; i++) {\n           
    let temp = UnityEngine_1.Object.Instantiate(this.enemy, this.parentNormal);\n           
    // @ts-ignore\n            temp.GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemyDamage.EnemyDamage\").particlePool
    = this.particlePool;\n            // @ts-ignore\n            temp.GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemyDamage.EnemyDamage\").damagePool
    = this.damagePool;\n            temp.SetActive(false);\n            this.poolListNormal[i]
    = temp;\n        }\n        // Big\n        for (let i = 0; i < this.bigAmount;
    i++) {\n            let temp = UnityEngine_1.Object.Instantiate(this.enemyBig,
    this.parentBig);\n            // @ts-ignore\n            temp.GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemyDamage.EnemyDamage\").particlePool
    = this.particlePool;\n            // @ts-ignore\n            temp.GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemyDamage.EnemyDamage\").damagePool
    = this.damagePool;\n            temp.SetActive(false);\n            this.poolListBig[i]
    = temp;\n        }\n        // Fast\n        for (let i = 0; i < this.fastAmount;
    i++) {\n            let temp = UnityEngine_1.Object.Instantiate(this.enemyFast,
    this.parentFast);\n            // @ts-ignore\n            temp.GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemyDamage.EnemyDamage\").particlePool
    = this.particlePool;\n            // @ts-ignore\n            temp.GetComponent(\"@assets/Experience/tower-of-time/Scripts/EnemyDamage.EnemyDamage\").damagePool
    = this.damagePool;\n            temp.SetActive(false);\n            this.poolListFast[i]
    = temp;\n        }\n    }\n    *Spawner() {\n        while (true) {\n           
    // Wait\n            let freq = (RoundManager_1.default.swarmRound) ? EnemySpawner.spawnFrequenzy
    / 2.0 : EnemySpawner.spawnFrequenzy;\n            yield new UnityEngine_1.WaitForSeconds(freq);\n           
    if (!EnemySpawner.isSpawning)\n                continue;\n            // Start
    Swarming if it''s a swarm round, otherwise just spawn as usual\n            if
    (EnemySpawner.startSwarming) {\n                // Spawn a swarm to start the
    round\n                let c = 10;\n                c += RoundManager_1.default.round
    * 2;\n                while (c > 0) {\n                    c--;\n                   
    let spawnPosition = this.FindSpawnPosition();\n                    // Spawn enemy\n                   
    //Object.Instantiate(this.EnemyToSpawn(), spawnPosition, Quaternion.identity,
    this.transform);\n                    let poolAmount = this.normalAmount;\n                   
    let poolList = this.poolListNormal;\n                    if (this.EnemyToSpawn()
    == 1) {\n                        poolAmount = this.bigAmount;\n                       
    poolList = this.poolListBig;\n                    }\n                    else
    if (this.EnemyToSpawn() == 2) {\n                        poolAmount = this.fastAmount;\n                       
    poolList = this.poolListFast;\n                    }\n                    let
    enemyToSpawn = this.GetPooledObject(poolAmount, poolList);\n                   
    if (enemyToSpawn != null) {\n                        enemyToSpawn.transform.position
    = spawnPosition;\n                        enemyToSpawn.SetActive(true);\n                       
    // Increase count\n                        EnemySpawner.wormsAlive++;\n                   
    }\n                    yield new UnityEngine_1.WaitForSeconds(0.1);\n               
    }\n                EnemySpawner.startSwarming = false;\n            }\n           
    // Look for spawn point\n            let spawnPosition = this.FindSpawnPosition();\n           
    if (EnemySpawner.wormsAlive < this.maxEnemies) {\n                // Spawn enemy\n               
    //Object.Instantiate(this.EnemyToSpawn(), spawnPosition, Quaternion.identity,
    this.transform);\n                let poolAmount = this.normalAmount;\n               
    let poolList = this.poolListNormal;\n                if (this.EnemyToSpawn()
    == 1) {\n                    poolAmount = this.bigAmount;\n                   
    poolList = this.poolListBig;\n                }\n                else if (this.EnemyToSpawn()
    == 2) {\n                    poolAmount = this.fastAmount;\n                   
    poolList = this.poolListFast;\n                }\n                let enemyToSpawn
    = this.GetPooledObject(poolAmount, poolList);\n                if (enemyToSpawn
    != null) {\n                    enemyToSpawn.transform.position = spawnPosition;\n                   
    enemyToSpawn.SetActive(true);\n                    // Increase count\n                   
    EnemySpawner.wormsAlive++;\n                }\n            }\n        }\n   
    }\n    // 0 = normal, 1 = big, 2 = fast\n    EnemyToSpawn() {\n        let tempEnemy
    = 0;\n        let randomNumber = // @ts-ignore\n         UnityEngine_1.Random.Range_EBB7509C_H1075CF37(0.0,
    100.0);\n        if (randomNumber < 92) {\n            if (RoundManager_1.default.round
    > 6 && randomNumber < 10) {\n                // Fast enemy\n                tempEnemy
    = 2;\n            }\n            // Normal enemy\n        }\n        else if
    (RoundManager_1.default.round > 3) {\n            // Big enemy\n            tempEnemy
    = 1;\n        }\n        return tempEnemy;\n    }\n    FindSpawnPosition() {\n       
    let spawnPos = UnityEngine_1.Vector3.zero;\n        // max 100 tries to prevent
    crash\n        let spawnFound = false;\n        let count = 5;\n        while
    (!spawnFound && count > 0) {\n            count--;\n            // Make a random
    position in the world based on the size of the island\n            let xRandom
    = // @ts-ignore\n             UnityEngine_1.Random.Range_EBB7509C_H1075CF37(-15.0,
    18.0);\n            let zRandom = // @ts-ignore\n             UnityEngine_1.Random.Range_EBB7509C_H1075CF37(-17.0,
    10.0);\n            let randomPosition = new UnityEngine_1.Vector3(xRandom, 0,
    zRandom);\n            // Make sure the random position is far away enough from
    the player, to prevent seeing the enemies spawn\n            if (this.IsTooCloseToPlayer(randomPosition)
    == true)\n                continue;\n            // If randomPosition is not
    too close, check if the position is okay to spawn at, or if there is a collider
    in the way\n            randomPosition.y = 10;\n            let ray = new UnityEngine_1.Ray(randomPosition,
    UnityEngine_1.Vector3.down);\n            let hit = $ref();\n            if (
    // @ts-ignore\n            UnityEngine_1.Physics.Raycast_EBB7509C_C446A765(ray,
    hit, (20), this.layerMask)) {\n                if ($unref(hit).transform.tag
    == \"SpawnArea\") {\n                    // Found a spawn point!\n                   
    spawnPos = $unref(hit).point;\n                    spawnFound = true;\n               
    }\n                else {\n                    // No spawn found, try again\n                   
    //console.log(`No Spawn was Found`);\n                }\n            }\n       
    }\n        return spawnPos;\n    }\n    IsTooCloseToPlayer(randomPosition) {\n       
    let inRange = false;\n        let playerPosition = this.player.position;\n       
    let xMin = playerPosition.x - 5.0; // 4 > 6\n        let xMax = playerPosition.x
    + 5.0;\n        let zMax = playerPosition.z + 12.0;\n        let zMin = playerPosition.z
    - 12.0;\n        if (randomPosition.x < xMax && randomPosition.x > xMin && randomPosition.z
    < zMax && randomPosition.z > zMin) {\n            inRange = true;\n        }\n       
    //else if (randomPosition.z < zMax && randomPosition.z > zMin)\n        //{\n       
    //    inRange = true;\n        //}\n        return inRange;\n    }\n    GetPooledObject(poolAmount,
    poolList) {\n        let result = null;\n        for (let i = 0; i < poolAmount;
    i++) {\n            let temp = poolList[i];\n            if (!temp.activeInHierarchy)
    {\n                result = temp;\n                break;\n            }\n       
    }\n        return result;\n    }\n    GameOver() {\n        this.StopAllCoroutines();\n   
    }\n}\nEnemySpawner.spawnFrequenzy = 5.0;\nEnemySpawner.wormsAlive = 0;\nexports.default
    = EnemySpawner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","ScriptHash":"2729924c4860992b0aba1f797d6e9aea","Specifier":"@assets/Experience/tower-of-time/Scripts/EnemySpawner","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/EnemySpawner.EnemySpawner","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/EnemySpawner.EnemySpawner","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.13.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"enemy","Name":"enemy","TypeName":"UnityEngine.GameObject","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Enemy","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"enemyBig","Name":"enemyBig","TypeName":"UnityEngine.GameObject","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Enemy
    Big","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"enemyFast","Name":"enemyFast","TypeName":"UnityEngine.GameObject","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Enemy
    Fast","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"player","Name":"player","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Player","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"parentNormal","Name":"parentNormal","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Parent
    Normal","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"parentBig","Name":"parentBig","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Parent
    Big","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"parentFast","Name":"parentFast","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Parent
    Fast","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"particlePool","Name":"particlePool","TypeName":"@assets/Experience/tower-of-time/Scripts/ParticlePool.ParticlePool","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":true,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Particle
    Pool","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"damagePool","Name":"damagePool","TypeName":"@assets/Experience/tower-of-time/Scripts/DamagePool.DamagePool","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":true,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Damage
    Pool","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"turrets","Name":"turrets","TypeName":"@assets/Experience/tower-of-time/Scripts/Turret.Turret","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":1,"IsArray":true,"IsEnum":false,"ArrayElementInitializer":{"Path":"turrets_D1","Name":"turrets","TypeName":"@assets/Experience/tower-of-time/Scripts/Turret.Turret","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":true,"IsGeniesScriptableObjectRef":false,"Decorators":[],"Initializers":[],"ArrayDimension":1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Turrets","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},"ChildProperties":[],"PrettyName":"Turrets","_arrayElementInitializerJson":"{\"Path\":\"turrets_D1\",\"Name\":\"turrets\",\"TypeName\":\"@assets/Experience/tower-of-time/Scripts/Turret.Turret\",\"AssemblyName\":null,\"EnumKeys\":[],\"EnumValues\":[],\"IsGeniesBehaviourRef\":true,\"IsGeniesScriptableObjectRef\":false,\"Decorators\":[],\"Initializers\":[],\"ArrayDimension\":1,\"IsArray\":false,\"IsEnum\":false,\"ArrayElementInitializer\":null,\"ChildProperties\":[],\"PrettyName\":\"Turrets\",\"_arrayElementInitializerJson\":null,\"_childPropertiesJson\":\"[]\",\"_prettyName\":null}","_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None"}'
