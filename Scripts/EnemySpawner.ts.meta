fileFormatVersion: 2
guid: c53c30fe9917dbe45941d22f3a8cc699
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"IsCompiled":true,"CompilerVersion":"2.0.63","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/RoundManager"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nconst RoundManager_1 = require(\"@assets/Experience/tower-of-time/Scripts/RoundManager\");\nclass
    EnemySpawner extends UnityEngine_1.MonoBehaviour {\n    constructor() {\n       
    super(...arguments);\n        this.layerMask = (1 << UnityEngine_1.LayerMask.NameToLayer(\"CustomLayer2\"))
    | (1 << UnityEngine_1.LayerMask.NameToLayer(\"CustomLayer6\"));\n        this.spawnFrequenzy
    = 3.0;\n    }\n    //Called when script instance is loaded\n    Awake() { }\n   
    //Start is called on the frame when a script is enabled just \n    //before any
    of the Update methods are called the first time.\n    Start() {\n        this.StartCoroutine(this.Spawner());\n   
    }\n    //Update is called every frame, if the MonoBehaviour is enabled.\n   
    Update() { }\n    *Spawner() {\n        while (true) {\n            // Wait\n           
    yield new UnityEngine_1.WaitForSeconds(this.spawnFrequenzy);\n            //
    If it''s not a spawn round, don''t spawn\n            if (!RoundManager_1.default.swarmRound)\n               
    continue;\n            // Look for spawn point\n            let spawnPosition
    = this.FindSpawnPosition();\n            // Spawn enemy\n            UnityEngine_1.Object.Instantiate(this.enemy,
    spawnPosition, UnityEngine_1.Quaternion.identity, this.transform);\n        }\n   
    }\n    FindSpawnPosition() {\n        let spawnPos = UnityEngine_1.Vector3.zero;\n       
    // max 100 tries to prevent crash\n        let spawnFound = false;\n        let
    count = 100;\n        while (!spawnFound && count > 0) {\n            count--;\n           
    // Make a random position in the world based on the size of the island\n           
    let xRandom = // @ts-ignore\n             UnityEngine_1.Random.Range_EBB7509C_H1075CF37(-15.0,
    15.0);\n            let zRandom = // @ts-ignore\n             UnityEngine_1.Random.Range_EBB7509C_H1075CF37(-17.0,
    10.0);\n            let randomPosition = new UnityEngine_1.Vector3(xRandom, 0,
    zRandom);\n            // Make sure the random position is far away enough from
    the player, to prevent seeing the enemies spawn\n            if (this.IsTooCloseToPlayer(randomPosition)
    == true)\n                continue;\n            // If randomPosition is not
    too close, check if the position is okay to spawn at, or if there is a collider
    in the way\n            randomPosition.y = 10;\n            let ray = new UnityEngine_1.Ray(randomPosition,
    UnityEngine_1.Vector3.down);\n            let hit = $ref();\n            if (
    // @ts-ignore\n            UnityEngine_1.Physics.Raycast_EBB7509C_C446A765(ray,
    hit, (20), this.layerMask)) {\n                if ($unref(hit).transform.tag
    == \"SpawnArea\") {\n                    // Found a spawn point!\n                   
    spawnPos = $unref(hit).point;\n                    spawnFound = true;\n               
    }\n                else {\n                    // No spawn found, try again\n                   
    console.log(`No Spawn was Found`);\n                }\n            }\n       
    }\n        return spawnPos;\n    }\n    IsTooCloseToPlayer(randomPosition) {\n       
    let inRange = false;\n        let playerPosition = this.player.position;\n       
    let xMin = playerPosition.x - 6.0; // 4 > 6\n        let xMax = playerPosition.x
    + 6.0;\n        let zMax = playerPosition.z + 12.0;\n        let zMin = playerPosition.z
    - 13.0;\n        if (randomPosition.x < xMax && randomPosition.x > xMin) {\n           
    inRange = true;\n        }\n        else if (randomPosition.z < zMax && randomPosition.z
    > zMin) {\n            inRange = true;\n        }\n        return inRange;\n   
    }\n}\nexports.default = EnemySpawner;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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UTtRQUV6QyxJQUFJLElBQUksR0FBRyxjQUFjLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLFFBQU87UUFDMUMsSUFBSSxJQUFJLEdBQUcsY0FBYyxDQUFDLENBQUMsR0FBRyxHQUFHO1FBQ2pDLElBQUksSUFBSSxHQUFHLGNBQWMsQ0FBQyxDQUFDLEdBQUcsSUFBSTtRQUNsQyxJQUFJLElBQUksR0FBRyxjQUFjLENBQUMsQ0FBQyxHQUFHLElBQUk7UUFFbEMsSUFBSSxjQUFjLENBQUMsQ0FBQyxHQUFHLElBQUksSUFBSSxjQUFjLENBQUMsQ0FBQyxHQUFHLElBQUksRUFDdEQ7WUFDSSxPQUFPLEdBQUcsSUFBSTtRQUNsQjthQUNLLElBQUksY0FBYyxDQUFDLENBQUMsR0FBRyxJQUFJLElBQUksY0FBYyxDQUFDLENBQUMsR0FBRyxJQUFJLEVBQzNEO1lBQ0ksT0FBTyxHQUFHLElBQUk7UUFDbEI7UUFFQSxPQUFPLE9BQU87SUFDbEI7Q0FDSjtBQTNHQSwrQkEyR0EiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIkVuZW15U3Bhd25lci50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==","ScriptHash":"6b933ae4cd94b0279f4c8fb9e573eaf0","Specifier":"@assets/Experience/tower-of-time/Scripts/EnemySpawner","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/EnemySpawner.EnemySpawner","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/EnemySpawner.EnemySpawner","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.11.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"enemy","Name":"enemy","TypeName":"UnityEngine.GameObject","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Enemy","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"player","Name":"player","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Player","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None","DisplayName":"EnemySpawner","name":"EnemySpawner","hideFlags":"NotEditable"}'
