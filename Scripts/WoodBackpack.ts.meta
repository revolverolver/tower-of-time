fileFormatVersion: 2
guid: 34e9c9bcd63c3bb458b990bcf2a1f4a0
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"IsCompiled":true,"CompilerVersion":"2.0.63","ReferencedSpecifiers":["@assets/Experience/tower-of-time/Scripts/WoodPiece","@assets/Experience/tower-of-time/Scripts/Building","@assets/Experience/tower-of-time/Scripts/PlayerSounds","@assets/Experience/tower-of-time/Scripts/CameraMovement"],"Source":"\"use
    strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst
    UnityEngine_1 = require(\"UnityEngine\");\nconst PlayerSounds_1 = require(\"@assets/Experience/tower-of-time/Scripts/PlayerSounds\");\nconst
    CameraMovement_1 = require(\"@assets/Experience/tower-of-time/Scripts/CameraMovement\");\nclass
    WoodBackpack extends UnityEngine_1.MonoBehaviour {\n    constructor() {\n       
    super(...arguments);\n        this.maxWood = 20;\n        this.sendAmount = 0;\n       
    this.sendingWood = false;\n        this.sendTime = 0.06;\n        this.woodTimer
    = this.sendTime;\n    }\n    //Called when script instance is loaded\n    Awake()
    { }\n    //Start is called on the frame when a script is enabled just \n    //before
    any of the Update methods are called the first time.\n    Start() {\n       
    this.gameManager = CameraMovement_1.default.Instance;\n        this.playerSounds
    = PlayerSounds_1.default.Instance;\n        this.gameManager.OnCameraStateChange.addListener(this.CheckGameState,
    //@ts-ignore\n        this);\n    }\n    CheckGameState(newState) {\n       
    switch (newState) {\n            case CameraMovement_1.CameraState.FOLLOWING_PLAYER:\n               
    this.isPlaying = true;\n                break;\n            default:\n               
    this.isPlaying = false;\n                break;\n        }\n    }\n    //Update
    is called every frame, if the MonoBehaviour is enabled.\n    Update() {\n       
    if (this.sendingWood && this.isPlaying) {\n            if (this.woodTimer <=
    0 && this.sendAmount > 0) {\n                this.SendWoodPiece();\n               
    // Reset timer\n                this.woodTimer = this.sendTime;\n           
    }\n            this.woodTimer -= UnityEngine_1.Time.deltaTime;\n        }\n   
    }\n    AddWoodToBackpack(obj) {\n        // Disable collider and wood script
    to prevent multiple adds\n        let collider = obj.GetComponent($typeof(UnityEngine_1.Collider));\n       
    collider.enabled = false;\n        let woodPiece = // @ts-ignore\n         obj.GetComponent(\"@assets/Experience/tower-of-time/Scripts/WoodPiece.WoodPiece\");\n       
    woodPiece.carried = true;\n        // Place wood in free slot in backpack\n       
    let wood = obj.transform;\n        wood.SetParent(this.slots[WoodBackpack.woodAmount]);\n       
    wood.transform.localPosition = UnityEngine_1.Vector3.zero;\n        // Adjust
    rotation\n        wood.localRotation = // @ts-ignore\n            UnityEngine_1.Quaternion.Euler_EBB7509C_E4172388((0),
    (0), (90));\n        // Increase wood carried\n        WoodBackpack.woodAmount++;\n       
    // Update text\n        this.woodText.text = WoodBackpack.woodAmount + \"/\"
    + this.maxWood;\n        // Play sound\n        this.playerSounds.PlayQuickSound(1,
    0.8);\n        if (WoodBackpack.woodAmount >= this.maxWood) {\n            WoodBackpack.woodFull
    = true;\n        }\n    }\n    StartSendingWood(obj) {\n        // Ask building
    if it needs wood and how much\n        let building = // @ts-ignore\n        
    obj.GetComponent(\"@assets/Experience/tower-of-time/Scripts/Building.Building\");\n       
    let woodToSend = building.WoodNeeded();\n        if (woodToSend == 0)\n           
    return;\n        // Start Sending Wood\n        this.currentBuilding = obj;\n       
    this.sendAmount = woodToSend;\n        this.sendingWood = true;\n        this.woodTimer
    = this.sendTime;\n        // Send first piece before starting the timer\n       
    this.SendWoodPiece();\n    }\n    SendWoodPiece() {\n        // Send piece from
    top of backpack\n        //console.log(this.slots[WoodBackpack.woodAmount - 1].GetChild(0).name);\n       
    let woodPiece = this.slots[WoodBackpack.woodAmount - 1].GetChild(0);\n       
    let wood = // @ts-ignore\n         woodPiece.GetComponent(\"@assets/Experience/tower-of-time/Scripts/WoodPiece.WoodPiece\");\n       
    wood.SendToBuilding(this.currentBuilding);\n        WoodBackpack.woodAmount--;\n       
    this.sendAmount--;\n        // Update text\n        this.woodText.text = WoodBackpack.woodAmount.toString()
    + \"/\" + this.maxWood.toString();\n        // Play sound\n        this.playerSounds.PlayQuickSound(0,
    0.3, 0.8);\n        // Check if there is wood left\n        if (WoodBackpack.woodAmount
    <= 0 || this.sendAmount <= 0) {\n            // No more wood to send so let''s
    stop sending\n            this.sendingWood = false;\n        }\n        else
    if (WoodBackpack.woodFull) {\n            // Backpack no longer full\n           
    WoodBackpack.woodFull = false;\n        }\n    }\n    OnTriggerEnter(other) {\n       
    // Getting Wood\n        if (other.tag == \"Wood\") {\n            if (WoodBackpack.woodFull)
    {\n                // Inventory full\n                UnityEngine_1.Object.Destroy(other.gameObject);\n           
    }\n            else {\n                // Add wood\n                this.AddWoodToBackpack(other.gameObject);\n           
    }\n        }\n        // Building\n        if (other.tag == \"Building\") {\n           
    if (WoodBackpack.woodAmount <= 0)\n                return;\n            // Player
    is carrying wood and will start sending wood\n            this.StartSendingWood(other.gameObject);\n       
    }\n    }\n    OnTriggerExit(other) {\n        // Building\n        if (other.tag
    == \"Building\") {\n            this.sendingWood = false;\n        }\n    }\n}\nWoodBackpack.woodAmount
    = 0;\nexports.default = WoodBackpack;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFDOUI7WUFDSSwwQkFBeUI7WUFDekIsWUFBWSxDQUFDLFFBQVEsR0FBRyxLQUFLO1FBQ2pDO0lBQ0o7SUFFQSxjQUFjLENBQUMsS0FBZTtRQUUxQixlQUFjO1FBQ2QsSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLE1BQU0sRUFDdkI7WUFDSSxJQUFJLFlBQVksQ0FBQyxRQUFRLEVBQ3pCO2dCQUNJLGlCQUFnQjtnQkFDaEIsb0JBQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQztZQUNwQztpQkFFQTtnQkFDSSxXQUFVO2dCQUNWLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDO1lBQzVDO1FBQ0o7UUFFQSxXQUFVO1FBQ1YsSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLFVBQVUsRUFDM0I7WUFDSSxJQUFJLFlBQVksQ0FBQyxVQUFVLElBQUksQ0FBQztnQkFDNUIsT0FBTTtZQUVWLHNEQUFxRDtZQUNyRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQztRQUMzQztJQUNKO0lBRVEsYUFBYSxDQUFDLEtBQWU7UUFFakMsV0FBVTtRQUNWLElBQUksS0FBSyxDQUFDLEdBQUcsSUFBSSxVQUFVLEVBQzNCO1lBQ0ksSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLO1FBQzVCO0lBQ0o7O0FBN0tjLHVCQUFVLEdBQVEsQ0FBQyxBQUFULENBQVM7a0JBWGhCLFlBQVkiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIldvb2RCYWNrcGFjay50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdfQ==","ScriptHash":"58486868beacfddd6489f28628db1f7a","Specifier":"@assets/Experience/tower-of-time/Scripts/WoodBackpack","DefaultTypeName":"@assets/Experience/tower-of-time/Scripts/WoodBackpack.WoodBackpack","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/tower-of-time/Scripts/WoodBackpack.WoodBackpack","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.11.0\\Runtime\\Typing\\index.d.System.Object"],"Properties":[{"Path":"woodText","Name":"woodText","TypeName":"TMPro.TextMeshProUGUI","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Wood
    Text","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"backpack","Name":"backpack","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Backpack","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"slots","Name":"slots","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":1,"IsArray":true,"IsEnum":false,"ArrayElementInitializer":{"Path":"slots_D1","Name":"slots","TypeName":"UnityEngine.Transform","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[],"Initializers":[],"ArrayDimension":1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Slots","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},"ChildProperties":[],"PrettyName":"Slots","_arrayElementInitializerJson":"{\"Path\":\"slots_D1\",\"Name\":\"slots\",\"TypeName\":\"UnityEngine.Transform\",\"AssemblyName\":null,\"EnumKeys\":[],\"EnumValues\":[],\"IsGeniesBehaviourRef\":false,\"IsGeniesScriptableObjectRef\":false,\"Decorators\":[],\"Initializers\":[],\"ArrayDimension\":1,\"IsArray\":false,\"IsEnum\":false,\"ArrayElementInitializer\":null,\"ChildProperties\":[],\"PrettyName\":\"Slots\",\"_arrayElementInitializerJson\":null,\"_childPropertiesJson\":\"[]\",\"_prettyName\":null}","_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None","DisplayName":"WoodBackpack","name":"WoodBackpack","hideFlags":"NotEditable"}'
